syntax = "proto3";
package arkeo.arkeo;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/arkeonetwork/arkeo/x/arkeo/types";

enum ProviderStatus {
  OFFLINE = 0;
  ONLINE = 1;
}

message Provider {
  bytes pub_key = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  int32 service = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.Service" ];
  string metadata_uri = 3;
  uint64 metadata_nonce = 4;
  ProviderStatus status = 5;
  int64 min_contract_duration = 6;
  int64 max_contract_duration = 7;
  repeated cosmos.base.v1beta1.Coin subscription_rate = 8
      [ (gogoproto.nullable) = false ];
  repeated cosmos.base.v1beta1.Coin pay_as_you_go_rate = 9
      [ (gogoproto.nullable) = false ];
  string bond = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 last_update = 11;
  int64 settlement_duration = 12;
}

enum ContractType {
  SUBSCRIPTION = 0;
  PAY_AS_YOU_GO = 1;
}

enum ContractAuthorization {
  STRICT = 0;
  OPEN = 1;
}

message Contract {
  bytes provider = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  int32 service = 2
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.Service" ];
  bytes client = 3
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  bytes delegate = 4
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractType type = 5;
  int64 height = 6;
  int64 duration = 7;
  cosmos.base.v1beta1.Coin rate = 8 [ (gogoproto.nullable) = false ];
  string deposit = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  string paid = 10 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 nonce = 11;
  int64 settlement_height = 12;
  uint64 id = 13;
  int64 settlement_duration = 14;
  ContractAuthorization authorization = 15;
  int64 queries_per_minute = 16;
}

message ContractSet { repeated uint64 contract_ids = 1 [ packed = true ]; }

message ContractExpirationSet {
  int64 height = 1;
  ContractSet contract_set = 2;
}

message UserContractSet {
  bytes user = 1
      [ (gogoproto.casttype) = "github.com/arkeonetwork/arkeo/common.PubKey" ];
  ContractSet contract_set = 2;
}
